{"version":3,"file":"FeedbackForm-CaXsU_ag.js","sources":["../../../../components/FeedbackForm.vue"],"sourcesContent":["<template>\n  <section class=\"feedback-section\" ref=\"feedbackSection\">\n    <div class=\"feedback-bg\">\n      <img :src=\"backgroundImage\" alt=\"Фоновый узор\">\n    </div>\n    <div class=\"feedback-container\">\n      <div class=\"feedback-left\">\n        <div class=\"feedback-text\" ref=\"feedbackText\">\n          <h2>Оставить обратную связь</h2>\n          <p>Остались вопросы или есть предложения? Напишите нам – мы всегда на связи!</p>\n        </div>\n        <div class=\"feedback-form\" ref=\"feedbackForm\">\n          <div class=\"form-group\" :class=\"{ 'error': errors.name, 'pulse-animation': animationFields.name }\">\n            <label for=\"name\">Имя</label>\n            <input \n              type=\"text\" \n              id=\"name\" \n              placeholder=\"Ваше имя...\" \n              v-model=\"formData.name\"\n              @focus=\"clearError('name')\"\n            >\n            <span class=\"error-message\" v-if=\"errors.name\">{{ errors.name }}</span>\n          </div>\n          <div class=\"form-group\" :class=\"{ 'error': errors.email, 'pulse-animation': animationFields.email }\">\n            <label for=\"email\">Email</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              placeholder=\"user.name@email.com\" \n              v-model=\"formData.email\"\n              @focus=\"clearError('email')\"\n            >\n            <span class=\"error-message\" v-if=\"errors.email\">{{ errors.email }}</span>\n          </div>\n          <div class=\"form-group\" :class=\"{ 'error': errors.phone, 'pulse-animation': animationFields.phone }\">\n            <label for=\"phone\">Телефон</label>\n            <input \n              type=\"tel\" \n              id=\"phone\" \n              placeholder=\"+998 90 111 22 33\" \n              v-model=\"formData.phone\"\n              @focus=\"clearError('phone')\"\n            >\n            <span class=\"error-message\" v-if=\"errors.phone\">{{ errors.phone }}</span>\n          </div>\n          <div class=\"form-group\" :class=\"{ 'error': errors.message, 'pulse-animation': animationFields.message }\">\n            <label for=\"message\">Сообщение</label>\n            <textarea \n              id=\"message\" \n              placeholder=\"Пожалуйста, введите ваше сообщение здесь... (необязательно)\" \n              v-model=\"formData.message\"\n              @focus=\"clearError('message')\"\n            ></textarea>\n            <span class=\"error-message\" v-if=\"errors.message\">{{ errors.message }}</span>\n          </div>\n          <button \n            class=\"feedback-submit\" \n            @click.prevent=\"submitForm\"\n            :disabled=\"isSubmitting\"\n          >\n            <span v-if=\"!isSubmitting\">Отправить сообщение</span>\n            <span v-else class=\"spinner\"></span>\n          </button>\n          <div class=\"form-status\" v-if=\"formStatus.message\">\n            <div class=\"success-message\" v-if=\"formStatus.success\">\n              {{ formStatus.message }}\n            </div>\n            <div class=\"error-message-global\" v-else>\n              {{ formStatus.message }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"feedback-right\">\n        <div class=\"consultation-card\" ref=\"consultationCard\">\n          <h3>Консультация по проекту</h3>\n          <p>Чтобы узнать больше о наших услугах, заполните заявку или позвоните нам. Мы расскажем вам, как мы можем помочь вашему бизнесу.</p>\n          <div class=\"consultation-info\">\n            <div class=\"consultation-item\">\n              <span class=\"consultation-label\">Телефон:</span>\n              <span class=\"consultation-value\"><a href=\"tel:+998941452332\"> +998 (94) 145-23-32</a></span>\n            </div>\n            <div class=\"consultation-item\">\n              <span class=\"consultation-label\">Email:</span>\n              <span class=\"consultation-value\"><a href=\"devx.brand@gmail.com\"> devx.brand@gmail.com</a></span>\n            </div>\n            <div class=\"consultation-item\">\n              <span class=\"consultation-label\">Адрес:</span>\n              <span class=\"consultation-value\">Тошкент шахар Янгихаёт тумани  ул. Райхон, дом F 03-2158</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default {\n  name: 'FeedbackForm',\n  setup() {\n    // Refs для анимации\n    const feedbackSection = ref(null);\n    const feedbackText = ref(null);\n    const feedbackForm = ref(null);\n    const consultationCard = ref(null);\n    \n    // Получаем текущий роут\n    const route = useRoute();\n    \n    // Определяем текущую тему для изображения\n    const currentTheme = computed(() => {\n      if (typeof window !== 'undefined') {\n        return document.documentElement.getAttribute('data-theme') || 'white';\n      }\n      return 'white';\n    });\n    \n    // Получаем путь к изображению в зависимости от темы\n    const backgroundImage = computed(() => {\n      return currentTheme.value === 'white' ? '/bg_Feedback-white.png' : '/bg_Feedback-dark.png';\n    });\n    \n    // Данные формы\n    const formData = reactive({\n      name: '',\n      email: '',\n      phone: '',\n      message: ''\n    });\n    \n    // Ошибки валидации\n    const errors = reactive({\n      name: '',\n      email: '',\n      phone: '',\n      message: ''\n    });\n    \n    // Состояние анимации для полей\n    const animationFields = reactive({\n      name: false,\n      email: false,\n      phone: false,\n      message: false\n    });\n    \n    // Состояние формы\n    const isSubmitting = ref(false);\n    const formStatus = reactive({\n      success: false,\n      message: ''\n    });\n    \n    // Функция для валидации формы\n    const validateForm = () => {\n      let isValid = true;\n      \n      // Валидация имени\n      if (!formData.name || formData.name.trim().length < 2) {\n        errors.name = 'Имя должно содержать не менее 2 символов';\n        startPulseAnimation('name');\n        isValid = false;\n      } else {\n        errors.name = '';\n      }\n      \n      // Валидация email\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!formData.email || !emailRegex.test(formData.email)) {\n        errors.email = 'Пожалуйста, введите корректный email';\n        startPulseAnimation('email');\n        isValid = false;\n      } else {\n        errors.email = '';\n      }\n      \n      // Валидация телефона\n      // Обновленное регулярное выражение для поддержки узбекских (+998) и российских номеров\n      const phoneRegex = /^(\\+998|998|8)?[\\s\\-]?(\\d{2}|\\(\\d{2}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{2}[\\s\\-]?\\d{2}$|^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\n      if (!formData.phone || !phoneRegex.test(formData.phone)) {\n        errors.phone = 'Пожалуйста, введите корректный номер телефона';\n        startPulseAnimation('phone');\n        isValid = false;\n      } else {\n        errors.phone = '';\n      }\n      \n      // Валидация сообщения\n      if (!formData.message || formData.message.trim().length < 10) {\n        errors.message = 'Сообщение должно содержать не менее 10 символов';\n        startPulseAnimation('message');\n        isValid = false;\n      } else {\n        errors.message = '';\n      }\n      \n      return isValid;\n    };\n    \n    // Функция для запуска пульсирующей анимации\n    const startPulseAnimation = (fieldName) => {\n      animationFields[fieldName] = true;\n      \n      // Останавливаем анимацию через 2 секунды\n      setTimeout(() => {\n        animationFields[fieldName] = false;\n      }, 2000);\n    };\n    \n    // Функция для очистки ошибки при фокусе на поле\n    const clearError = (fieldName) => {\n      errors[fieldName] = '';\n      animationFields[fieldName] = false;\n    };\n    \n    // Функция отправки формы\n    const submitForm = async () => {\n      // Проверяем валидацию\n      if (!validateForm()) {\n        return;\n      }\n      \n      // Устанавливаем состояние отправки\n      isSubmitting.value = true;\n      formStatus.success = false;\n      formStatus.message = '';\n      \n      try {\n        // Отправляем данные на сервер\n        const response = await fetch('/api/feedback', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        \n        const result = await response.json();\n        \n        // Если есть ошибки валидации с сервера\n        if (!result.success && result.errors) {\n          // Устанавливаем ошибки\n          Object.keys(result.errors).forEach(key => {\n            errors[key] = result.errors[key];\n            startPulseAnimation(key);\n          });\n        } else if (result.success) {\n          // Сбрасываем форму при успешной отправке\n          formData.name = '';\n          formData.email = '';\n          formData.phone = '';\n          formData.message = '';\n          \n          // Устанавливаем статус успеха\n          formStatus.success = true;\n          formStatus.message = result.message;\n          \n          // Анимация успешной отправки\n          if (feedbackForm.value) {\n            gsap.fromTo('.success-message', \n              { opacity: 0, y: 20 }, \n              { opacity: 1, y: 0, duration: 0.5, ease: 'power2.out' }\n            );\n          }\n          \n          // Сбрасываем статус через 5 секунд\n          setTimeout(() => {\n            formStatus.message = '';\n            formStatus.success = false;\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Ошибка при отправке формы:', error);\n        formStatus.success = false;\n        formStatus.message = 'Произошла ошибка при отправке формы. Пожалуйста, попробуйте позже.';\n      } finally {\n        // Завершаем отправку\n        isSubmitting.value = false;\n      }\n    };\n    \n    // Функция анимации секции обратной связи\n    const animateFeedbackSection = () => {\n      if (!feedbackText.value || !feedbackForm.value || !consultationCard.value) return;\n      \n      // Устанавливаем начальные значения для элементов\n      gsap.set(feedbackText.value, { y: 50, opacity: 0 });\n      gsap.set(feedbackForm.value.querySelectorAll('.form-group'), { y: 30, opacity: 0 });\n      gsap.set(feedbackForm.value.querySelector('button'), { y: 0, opacity: 0 });\n      gsap.set(consultationCard.value, { x: 50, opacity: 0 });\n      \n      const timeline = gsap.timeline({\n        scrollTrigger: {\n          trigger: feedbackSection.value,\n          start: 'top 80%',\n          end: 'bottom 20%',\n          toggleActions: 'play none none reverse'\n        }\n      });\n      \n      timeline\n        .to(feedbackText.value, {\n          y: 0,\n          opacity: 1,\n          duration: 0.8,\n          ease: 'power2.out'\n        })\n        .to(feedbackForm.value.querySelectorAll('.form-group'), {\n          y: 0,\n          opacity: 1,\n          stagger: 0.2,\n          duration: 0.5,\n          ease: 'power2.out'\n        }, '-=0.4')\n        .to(feedbackForm.value.querySelector('button'), {\n          y: 0,\n          opacity: 1,\n          duration: 0.5,\n          ease: 'power2.out',\n          clearProps: 'transform'\n        }, '-=0.2')\n        .to(consultationCard.value, {\n          x: 0,\n          opacity: 1,\n          duration: 0.8,\n          ease: 'power2.out'\n        }, '-=0.6');\n    };\n    \n    // Следим за изменением маршрута\n    watch(() => route.fullPath, () => {\n      console.log('Route changed, reinitializing feedback form animation');\n      // Очищаем все анимации ScrollTrigger\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n      \n      // Переинициализируем анимации с небольшой задержкой\n      setTimeout(() => {\n        animateFeedbackSection();\n      }, 300);\n    });\n    \n    // Отслеживаем изменение темы\n    watch(currentTheme, () => {\n      // При изменении темы переинициализируем анимации\n      if (typeof window !== 'undefined') {\n        // Очищаем все анимации ScrollTrigger\n        ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n        \n        // Переинициализируем анимации\n        setTimeout(() => {\n          animateFeedbackSection();\n        }, 300);\n      }\n    });\n    \n    // Инициализация анимаций при монтировании компонента\n    onMounted(() => {\n      // Небольшая задержка для уверенности, что DOM полностью загружен\n      setTimeout(() => {\n        animateFeedbackSection();\n      }, 500);\n      \n      // Добавляем обработчик изменения размера окна\n      window.addEventListener('resize', handleResize);\n    });\n    \n    // Функция для обработки изменения размера окна\n    const handleResize = () => {\n      // Очищаем все анимации ScrollTrigger\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n      \n      // Переинициализируем анимации\n      setTimeout(() => {\n        animateFeedbackSection();\n      }, 300);\n    };\n    \n    // Очистка при размонтировании компонента\n    onBeforeUnmount(() => {\n      // Удаляем обработчик изменения размера окна\n      window.removeEventListener('resize', handleResize);\n      \n      // Очищаем все анимации ScrollTrigger\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n    });\n    \n    return {\n      feedbackSection,\n      feedbackText,\n      feedbackForm,\n      consultationCard,\n      formData,\n      errors,\n      animationFields,\n      isSubmitting,\n      formStatus,\n      submitForm,\n      clearError,\n      backgroundImage\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Feedback section */\n.feedback-section {\n  position: relative;\n  background-color: var(--background-color);\n  margin-top: 50px;\n  position: relative;\n  overflow: hidden;\n  line-height: 1;\n  padding: 150px 0;\n}\n\n.feedback-bg {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.feedback-bg img {\n  width: 100%;\n  height: auto;\n  opacity: 0.4;\n}\n\n.feedback-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--background-color);\n  z-index: 0;\n}\n\n.feedback-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 40px;\n  position: relative;\n  z-index: 1;\n}\n\n.feedback-left {\n  flex: 1;\n  min-width: 300px;\n  max-width: 600px;\n\n  button{\n    span{\n      color: var(--text-hover-color);\n    }\n  }\n}\n\n.feedback-text h2 {\n  font-weight: 400;\n  font-size: 50px;\n  margin-bottom: 20px;\n  color: var(--text-hover-color);\n}\n\n.feedback-text p {\n  font-weight: 400;\n  font-size: 18px;\n  margin-bottom: 30px;\n  color: var(--text-color);\n}\n\n.feedback-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n}\n\n.form-group label {\n  font-weight: 700;\n  font-size: 18px;\n  color: var(--text-hover-color);\n}\n\n.form-group input,\n.form-group textarea {\n  padding: 15px;\n  border: 3px solid var(--text-hover-color);\n  background-color: transparent;\n  color: var(--text-color);\n  font-size: 18px;\n  border-radius: 0;\n}\n\n.form-group input::placeholder,\n.form-group textarea::placeholder {\n  color: var(--text-color);\n  opacity: 0.5;\n}\n\n.form-group textarea {\n  min-height: 120px;\n  resize: vertical;\n}\n\n.feedback-submit {\n  align-self: flex-start;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding: 16px 32px;\n  background-color: var(--btn1-color);\n  color: #fff;\n  border: 3px solid var(--text-hover-color);\n  font-weight: 700;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 55px;\n  min-width: 220px;\n  z-index: 5;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  border-radius: 6px;\n  opacity: 1 !important;\n  box-sizing: content-box;\n  overflow: visible;\n\n  @media (max-width: 576px) {\n    width: 150px;\n    padding: 10px 20px;\n  }\n}\n\n.form-group:last-of-type {\n  margin-bottom: 15px;\n}\n\n.form-status {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.success-message {\n  background-color: rgba(46, 204, 113, 0.1);\n  border-left: 3px solid #2ecc71;\n  padding: 10px 15px;\n  color: #2ecc71;\n  border-radius: 4px;\n}\n\n.error-message-global {\n  background-color: rgba(231, 76, 60, 0.1);\n  border-left: 3px solid #e74c3c;\n  padding: 10px 15px;\n  color: #e74c3c;\n  border-radius: 4px;\n  margin-top: 15px;\n}\n\n/* Стили для анимации ошибок */\n.form-group.error input,\n.form-group.error textarea {\n  border-color: #e74c3c;\n}\n\n.error-message {\n  color: #e74c3c;\n  font-size: 14px;\n  margin-top: 5px;\n}\n\n/* Пульсирующая анимация для ошибок */\n@keyframes pulse-error {\n  0% {\n    box-shadow: 0 0 0 0 rgba(231, 76, 60, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(231, 76, 60, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(231, 76, 60, 0);\n  }\n}\n\n.pulse-animation input,\n.pulse-animation textarea {\n  animation: pulse-error 1.5s infinite;\n}\n\n/* Спиннер для кнопки отправки */\n@keyframes spinner {\n  to { transform: rotate(360deg); }\n}\n\n.spinner {\n  width: 24px;\n  height: 24px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #ffffff;\n  animation: spinner 0.8s linear infinite;\n}\n\n.feedback-submit:hover {\n  background-color: var(--btn1-color-hover);\n  transform: translateY(-2px);\n  border-color: var(--btn1-color-hover);\n}\n\n.feedback-submit:disabled {\n  opacity: 0.7 !important;\n  cursor: not-allowed;\n}\n\n.feedback-right {\n  flex: 1;\n  min-width: 300px;\n  max-width: 400px;\n  display: flex;\n  align-items: center;\n}\n\n.consultation-card {\n  width: 100%;\n  padding: 30px;\n  border: 5px dashed var(--btn1-color-text);\n  background-color: var(--text-hover-color);\n  position: relative;\n  color: var(--text-color);\n  max-width: 371px;\n}\n\n.consultation-card h3 {\n  font-weight: 700;\n  font-size: 36px;\n  margin-bottom: 15px;\n  color: var(--btn1-color-text);\n}\n\n.consultation-card p {\n  font-weight: 400;\n  font-size: 16px;\n  margin-bottom: 30px;\n  color: var(--feedback-text-color);\n}\n\n.consultation-info {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.consultation-item {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.consultation-label {\n  font-weight: 700;\n  font-size: 16px;\n  color: var(--btn1-color-text);\n}\n\n.consultation-value {\n  font-weight: 400;\n  font-size: 16px;\n  color: var(--feedback-text-color);\n  \n  a{\n    &:hover{\n      color: var(--background-color);\n    }\n  }\n}\n\n/* Адаптивность */\n@media (max-width: 1200px) {\n  .feedback-container {\n    max-width: 960px;\n  }\n  \n  .feedback-text h2 {\n    font-size: 42px;\n  }\n}\n\n@media (max-width: 992px) {\n  .feedback-container {\n    max-width: 720px;\n  }\n  \n  .feedback-text h2 {\n    font-size: 36px;\n  }\n  \n  .consultation-card h3 {\n    font-size: 30px;\n  }\n}\n\n@media (max-width: 768px) {\n  .feedback-section {\n    padding: 80px 0;\n  }\n  \n  .feedback-container {\n    max-width: 540px;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .feedback-left,\n  .feedback-right {\n    max-width: 100%;\n  }\n  \n  .feedback-text h2 {\n    font-size: 32px;\n  }\n  \n  .consultation-card {\n    max-width: 100%;\n  }\n}\n\n@media (max-width: 576px) {\n  .feedback-section {\n    padding: 60px 0;\n    max-width: none;\n  }\n  \n  .feedback-text h2 {\n    font-size: 28px;\n  }\n  \n  .feedback-text p {\n    font-size: 16px;\n  }\n  \n  .form-group label {\n    font-size: 16px;\n  }\n  \n  .form-group input,\n  .form-group textarea {\n    font-size: 16px;\n    padding: 12px;\n    max-width: none;\n    width: 100%;\n  }\n  \n  .consultation-card h3 {\n    font-size: 24px;\n  }\n  \n  .consultation-card p {\n    font-size: 14px;\n  }\n  \n  .consultation-label,\n  .consultation-value {\n    font-size: 14px;\n  }\n}\n</style>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_ssrRenderClass","_ssrInterpolate","_ssrIncludeBooleanAttr"],"mappings":"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"}